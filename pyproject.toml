[project]
name = "agent-system"
version = "0.1.0"
description = "一个开源的端到端智能体系统，支持多种智能体设计模式和工具集成"
authors = [
    {name = "AI Agent Team", email = "team@example.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
keywords = ["ai", "agent", "llm", "chatbot", "automation"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "websockets>=12.0",
    "pydantic>=2.5.0",
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-dotenv>=1.0.0",
    "httpx>=0.25.2",
    "aiofiles>=23.2.1",
    "loguru>=0.7.2",
    "asyncio-mqtt>=0.16.1",
    "redis>=5.0.1",
    "sqlalchemy>=2.0.23",
    "alembic>=1.13.0",
    "psycopg2-binary>=2.9.9",
    "openai>=1.3.7",
    "anthropic>=0.7.8",
    "langchain>=0.1.0",
    "langchain-openai>=0.0.2",
    "langchain-anthropic>=0.0.1",
    "pandas>=2.1.4",
    "numpy>=1.25.2",
    "matplotlib>=3.8.2",
    "seaborn>=0.13.0",
    "plotly>=5.17.0",
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.2",
    "lxml>=4.9.3",
    "Pillow>=10.1.0",
    "python-docx>=1.1.0",
    "openpyxl>=3.1.2",
    "PyPDF2>=3.0.1",
    "markdown>=3.5.1",
    "jinja2>=3.1.2",
    "langchain-mcp-adapters>=0.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]

test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.2",
]

docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.2.0",
    "mkdocstrings[python]>=0.22.0",
]

[project.urls]
Homepage = "https://github.com/your-org/agent-system"
Documentation = "https://agent-system.readthedocs.io"
Repository = "https://github.com/your-org/agent-system"
"Bug Tracker" = "https://github.com/your-org/agent-system/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["agent-backend"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["agent_backend"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "fastapi.*",
    "uvicorn.*",
    "websockets.*",
    "pydantic.*",
    "python-multipart.*",
    "python-jose.*",
    "passlib.*",
    "python-dotenv.*",
    "httpx.*",
    "aiofiles.*",
    "loguru.*",
    "asyncio-mqtt.*",
    "redis.*",
    "sqlalchemy.*",
    "alembic.*",
    "psycopg2.*",
    "openai.*",
    "anthropic.*",
    "langchain.*",
    "langchain-openai.*",
    "langchain-anthropic.*",
    "pandas.*",
    "numpy.*",
    "matplotlib.*",
    "seaborn.*",
    "plotly.*",
    "requests.*",
    "beautifulsoup4.*",
    "lxml.*",
    "Pillow.*",
    "python-docx.*",
    "openpyxl.*",
    "PyPDF2.*",
    "markdown.*",
    "jinja2.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["agent-backend"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 